<?php

use App\Http\Controllers\AuthController;
use App\Http\Controllers\AuthorController;
use App\Http\Controllers\BookController;
use App\Http\Controllers\BorrowerController;
use App\Http\Controllers\NotificationController;
use App\Http\Controllers\ReviewController;
use App\Http\Controllers\UserController;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route;

/*
|--------------------------------------------------------------------------
| API Routes
|--------------------------------------------------------------------------
|
| Here is where you can register API routes for your application. These
| routes are loaded by the RouteServiceProvider and all of them will
| be assigned to the "api" middleware group. Make something great!
|
*/


/////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////// Auth Requests ////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////

// In Auth Controller
Route::post('/login', [AuthController::class, 'login']);
Route::post('/register', [AuthController::class, 'register']);
Route::post('logout', [AuthController::class, 'logout'])->middleware('api');
Route::post('changePassword', [AuthController::class, 'changePassword'])->middleware('api');
/////////////////////////////////////////////////////////////////////////////////////

// In User Controller
Route::get('user/{user}', [UserController::class, 'show'])->middleware('api');
Route::put('user/{user}/update', [UserController::class, 'update'])->middleware(['api', 'verify_update_user']);
/////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////// End Auth Requests //////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////

Route::middleware(['api'])->group(function () {

    /////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////// Author Requests //////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////

    Route::get('authors', [AuthorController::class, 'index']);
    Route::get('author/{author}', [AuthorController::class, 'show']);
    Route::post('author-create', [AuthorController::class, 'store'])->middleware('is_admin');
    Route::put('author/{author}/update', [AuthorController::class, 'update'])->middleware('is_admin');
    Route::delete('author/{author}/delete', [AuthorController::class, 'destroy'])->middleware('is_admin');

    /////////////////////////////////////////////////////////////////////////////////////
    //////////////////////////////// End Author Requests ////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////

    /////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////// Book Requests ///////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////

    Route::get('books', [BookController::class, 'index']);
    Route::get('book/{book}', [BookController::class, 'show']);
    Route::post('book-create', [BookController::class, 'store'])->middleware('is_admin');
    Route::put('book/{book}/update', [BookController::class, 'update'])->middleware('is_admin');
    Route::delete('book/{book}/delete', [BookController::class, 'destroy'])->middleware('is_admin');

    /////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////// End Book Requests /////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////

    /////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////// Review Requests //////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////

    Route::get('reviews', [ReviewController::class, 'index']);
    Route::get('review/{review}', [ReviewController::class, 'show']);
    Route::post('author/{author}/review', [ReviewController::class, 'authorStore']);
    Route::post('book/{book}/review', [ReviewController::class, 'bookStore']);
    Route::put('review/{review}/update', [ReviewController::class, 'update'])->middleware('verify_update_review');
    Route::delete('review/{review}/delete', [ReviewController::class, 'destroy'])->middleware('verify_delete_review');;

    /////////////////////////////////////////////////////////////////////////////////////
    //////////////////////////////// End Review Requests ////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////

    /////////////////////////////////////////////////////////////////////////////////////
    //////////////////////////////// Borrower Requests //////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////

    Route::post('borrower-books', [BorrowerController::class, 'borrowerBook']);
    Route::put('return-books', [BorrowerController::class, 'returnBook']);

    /////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////// End Borrower Requests ////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////

    /////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////// Notification Requests ////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////

    Route::get('notifications/', [NotificationController::class, 'index']);
    Route::put('notifications/{notification}/read', [NotificationController::class, 'read']);

    /////////////////////////////////////////////////////////////////////////////////////
    //////////////////////////// End Notification Requests //////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////
});
